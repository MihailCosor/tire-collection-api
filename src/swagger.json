{
    "openapi": "3.0.0",
    "info": {
      "title": "Tire Collection API",
      "version": "1.0.0",
      "description": "API for managing tire collection orders"
    },
    "servers": [
      {
        "url": "http://localhost:3000",
        "description": "Local development server"
      }
    ],
    "paths": {
      "/api/orders/van": {
        "get": {
          "summary": "Get all van orders",
          "tags": ["Van Orders"],
          "responses": {
            "200": {
              "description": "A list of van orders",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VanOrder"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new van order",
          "tags": ["Van Orders"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVanOrderInput"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The created van order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VanOrder"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request - validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/health": {
        "get": {
          "summary": "Health check endpoint",
          "tags": ["Health"],
          "responses": {
            "200": {
              "description": "API is healthy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "OK"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{orderId}": {
        "post": {
          "summary": "Create a new invoice for an order",
          "tags": ["Invoices"],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "responses": {
            "201": {
              "description": "The created invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{id}/pay": {
        "patch": {
          "summary": "Mark an invoice as paid",
          "tags": ["Invoices"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Invoice ID"
            }
          ],
          "responses": {
            "200": {
              "description": "The updated invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Invoice not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "CreateVanOrderInput": {
          "type": "object",
          "required": [
            "serviceId",
            "operatorId",
            "vehicleId",
            "destination",
            "amount",
            "tireCategories"
          ],
          "properties": {
            "serviceId": {
              "type": "integer",
              "description": "Service ID"
            },
            "operatorId": {
              "type": "integer",
              "description": "Operator ID"
            },
            "vehicleId": {
              "type": "integer",
              "description": "Vehicle ID"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "amount": {
              "type": "number",
              "description": "Order amount"
            },
            "tireCategories": {
              "type": "array",
              "description": "List of tire categories and quantities",
              "items": {
                "type": "object",
                "required": ["tireCategoryId", "quantity"],
                "properties": {
                  "tireCategoryId": {
                    "type": "integer",
                    "description": "Tire category ID"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "VanOrder": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/CreateVanOrderInput"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Order ID"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation date and time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last update date and time"
                },
                "isPaid": {
                  "type": "boolean",
                  "description": "Payment status"
                }
              }
            }
          ]
        },
        "Error": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        },
        "Invoice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Invoice ID"
            },
            "orderId": {
              "type": "integer",
              "description": "Order ID"
            },
            "orderType": {
              "type": "string",
              "description": "Type of order",
              "example": "van"
            },
            "number": {
              "type": "string",
              "description": "Invoice number",
              "nullable": true
            },
            "amount": {
              "type": "number",
              "description": "Invoice amount"
            },
            "isPaid": {
              "type": "boolean",
              "description": "Payment status"
            },
            "paidAt": {
              "type": "string",
              "format": "date-time",
              "description": "Payment date and time",
              "nullable": true
            },
            "issuedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Issue date and time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date and time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update date and time"
            }
          }
        }
      }
    }
  }