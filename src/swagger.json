{
    "openapi": "3.0.0",
    "info": {
      "title": "Tire Collection API",
      "version": "1.0.0",
      "description": "API for managing tire collection orders"
    },
    "servers": [
      {
        "url": "http://localhost:3000",
        "description": "Local development server"
      }
    ],
    "paths": {
      "/api/orders/van": {
        "get": {
          "summary": "Get all van orders",
          "tags": ["Van Orders"],
          "responses": {
            "200": {
              "description": "A list of van orders",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VanOrder"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new van order",
          "tags": ["Van Orders"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVanOrderInput"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The created van order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VanOrder"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request - validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/orders/truck": {
        "get": {
          "summary": "Get all truck orders",
          "tags": ["Truck Orders"],
          "responses": {
            "200": {
              "description": "A list of truck orders",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TruckOrder"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new truck order",
          "tags": ["Truck Orders"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTruckOrderInput"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The created truck order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TruckOrder"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request - validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/weighing/{orderId}": {
        "post": {
          "summary": "Confirm weight measurement for an order",
          "tags": ["Operations"],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWeighingInput"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The created weighing record",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeighingResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/dropzone/{orderId}": {
        "patch": {
          "summary": "Confirm unloading in the drop zone",
          "tags": ["Operations"],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "responses": {
            "200": {
              "description": "The created drop zone update",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DropZoneUpdateResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/depot/stock": {
        "get": {
          "summary": "Get current depot stock",
          "tags": ["Depot"],
          "description": "Returns the current stock of tires in the depot",
          "responses": {
            "200": {
              "description": "A list of depot stock entries",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DepotStock"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/orders/{id}/etransport": {
        "post": {
          "summary": "Generate eTransport document for an order",
          "tags": ["Documents"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "responses": {
            "201": {
              "description": "The generated eTransport document",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/orders/{id}/environment": {
        "post": {
          "summary": "Generate environment document for an order",
          "tags": ["Documents"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "responses": {
            "201": {
              "description": "The generated environment document",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DocumentResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{orderId}": {
        "post": {
          "summary": "Create a new invoice for an order",
          "tags": ["Invoices"],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Order ID"
            }
          ],
          "responses": {
            "201": {
              "description": "The created invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Order not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{id}/pay": {
        "patch": {
          "summary": "Mark an invoice as paid",
          "tags": ["Invoices"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "Invoice ID"
            }
          ],
          "responses": {
            "200": {
              "description": "The updated invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Invoice not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "CreateVanOrderInput": {
          "type": "object",
          "required": [
            "serviceId",
            "operatorId",
            "vehicleId",
            "destination",
            "amount",
            "tireCategories"
          ],
          "properties": {
            "serviceId": {
              "type": "integer",
              "description": "Service ID"
            },
            "operatorId": {
              "type": "integer",
              "description": "Operator ID"
            },
            "vehicleId": {
              "type": "integer",
              "description": "Vehicle ID"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "amount": {
              "type": "number",
              "description": "Order amount"
            },
            "tireCategories": {
              "type": "array",
              "description": "List of tire categories and quantities",
              "items": {
                "type": "object",
                "required": ["tireCategoryId", "quantity"],
                "properties": {
                  "tireCategoryId": {
                    "type": "integer",
                    "description": "Tire category ID"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "CreateTruckOrderInput": {
          "type": "object",
          "required": [
            "serviceId",
            "operatorId",
            "vehicleId",
            "destination",
            "amount",
            "tireCategories"
          ],
          "properties": {
            "serviceId": {
              "type": "integer",
              "description": "Service ID"
            },
            "operatorId": {
              "type": "integer",
              "description": "Operator ID"
            },
            "vehicleId": {
              "type": "integer",
              "description": "Vehicle ID"
            },
            "destination": {
              "type": "string",
              "description": "Destination"
            },
            "amount": {
              "type": "number",
              "description": "Order amount"
            },
            "tireCategories": {
              "type": "array",
              "description": "List of tire categories and quantities",
              "items": {
                "type": "object",
                "required": ["tireCategoryId", "quantity"],
                "properties": {
                  "tireCategoryId": {
                    "type": "integer",
                    "description": "Tire category ID"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "CreateWeighingInput": {
          "type": "object",
          "required": ["weight"],
          "properties": {
            "weight": {
              "type": "number",
              "description": "Weight in kg",
              "minimum": 0.1
            }
          }
        },
        "VanOrder": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/CreateVanOrderInput"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Order ID"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation date and time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last update date and time"
                },
                "isPaid": {
                  "type": "boolean",
                  "description": "Payment status"
                }
              }
            }
          ]
        },
        "TruckOrder": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/CreateTruckOrderInput"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Order ID"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Creation date and time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last update date and time"
                },
                "isPaid": {
                  "type": "boolean",
                  "description": "Payment status"
                }
              }
            }
          ]
        },
        "WeighingResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Weighing record ID"
            },
            "orderId": {
              "type": "integer",
              "description": "Order ID"
            },
            "weight": {
              "type": "number",
              "description": "Weight in kg"
            },
            "weighedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Weighing timestamp"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date and time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update date and time"
            },
            "message": {
              "type": "string",
              "description": "Success message"
            }
          }
        },
        "DropZoneUpdateResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Drop zone update ID"
            },
            "orderId": {
              "type": "integer",
              "description": "Order ID"
            },
            "unloadedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Unloading timestamp"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date and time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update date and time"
            },
            "message": {
              "type": "string",
              "description": "Success message"
            }
          }
        },
        "DepotStock": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Depot stock entry ID"
            },
            "tireCategoryId": {
              "type": "integer",
              "description": "Tire category ID"
            },
            "tireCategory": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Tire category ID"
                },
                "name": {
                  "type": "string",
                  "description": "Category name"
                },
                "description": {
                  "type": "string",
                  "description": "Category description"
                },
                "price": {
                  "type": "number",
                  "description": "Price per unit"
                }
              }
            },
            "quantity": {
              "type": "integer",
              "description": "Current stock quantity"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Last stock update time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date and time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update date and time"
            }
          }
        },
        "DocumentResponse": {
          "type": "object",
          "properties": {
            "documentId": {
              "type": "string",
              "description": "Unique document identifier"
            },
            "orderId": {
              "type": "integer",
              "description": "Associated order ID"
            },
            "filename": {
              "type": "string",
              "description": "Document filename"
            },
            "filePath": {
              "type": "string",
              "description": "Path to access the document"
            },
            "downloadUrl": {
              "type": "string",
              "description": "Full URL to download the document"
            },
            "generatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Document generation timestamp"
            },
            "message": {
              "type": "string",
              "description": "Success message"
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        },
        "Invoice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Invoice ID"
            },
            "orderId": {
              "type": "integer",
              "description": "Order ID"
            },
            "orderType": {
              "type": "string",
              "description": "Type of order",
              "example": "van"
            },
            "number": {
              "type": "string",
              "description": "Invoice number",
              "nullable": true
            },
            "amount": {
              "type": "number",
              "description": "Invoice amount"
            },
            "isPaid": {
              "type": "boolean",
              "description": "Payment status"
            },
            "paidAt": {
              "type": "string",
              "format": "date-time",
              "description": "Payment date and time",
              "nullable": true
            },
            "issuedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Issue date and time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Creation date and time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Last update date and time"
            }
          }
        }
      }
    }
  }